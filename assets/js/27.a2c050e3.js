(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{613:function(a,t,s){"use strict";s.r(t);var e=s(3),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[a._v("#")]),a._v(" 前言")]),a._v(" "),s("p",[a._v("本文将结合展厅大屏项目，详细介绍前端性能优化的一些手段。包括减少请求数量、懒加载、缓存、函数去抖（debounce）、初始化加载策略等。")]),a._v(" "),s("p",[a._v("该大屏的内容是比较丰富的，包含大量的图标、动画、地图数据、图表等。")]),a._v(" "),s("h2",{attrs:{id:"what-什么是前端性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-什么是前端性能优化"}},[a._v("#")]),a._v(" what -- 什么是前端性能优化")]),a._v(" "),s("p",[a._v("从用户访问资源到资源完整的展现在用户面前的过程中，通过技术手段和优化策略，缩短每个步骤的处理时间从而提升整个资源的访问和呈现速度。")]),a._v(" "),s("h2",{attrs:{id:"why-为什么要做前端性能优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#why-为什么要做前端性能优化"}},[a._v("#")]),a._v(" why -- 为什么要做前端性能优化")]),a._v(" "),s("p",[a._v("在构建 web 站点的过程中，任何一个细节都有可能影响网站的访问速度，如果不了解性能优化知识，很多不利网站访问速度的因素会形成累加，从而严重影响网站的性能，导致网站访问速度变慢，用户体验低下，最终导致用户流失。")]),a._v(" "),s("h2",{attrs:{id:"rule-前端性能优化的原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rule-前端性能优化的原则"}},[a._v("#")]),a._v(" rule -- 前端性能优化的原则")]),a._v(" "),s("p",[a._v("1、不出 bug!")]),a._v(" "),s("p",[a._v("2、具体问题具体分析，根据实际情况因地制宜")]),a._v(" "),s("p",[a._v("3、从浏览器发起请求到页面能正常浏览都有哪些阶段（process）？")]),a._v(" "),s("p",[a._v("预处理——>DNS 解析——>建立连接——>发起请求——>等待响应——>接受数据——>处理元素——>布局渲染")]),a._v(" "),s("h3",{attrs:{id:"vue-项目构建前"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-项目构建前"}},[a._v("#")]),a._v(" vue 项目构建前")]),a._v(" "),s("ul",[s("li",[a._v("根据交互稿或视觉稿，合理划分 pages，一般按照模块和子模块划分；")]),a._v(" "),s("li",[a._v("使用路由懒加载，实现模块化与按需加载的效果，优化首屏性能；")]),a._v(" "),s("li",[a._v("提取公共组件，尽量与业务隔离，如筛选条件等；")]),a._v(" "),s("li",[a._v("提取公共方法，放在 util.js 中，如表单校验封装；")]),a._v(" "),s("li",[a._v("提取在项目中出现较多的功能模块，如弹窗详情等；")]),a._v(" "),s("li",[a._v("与后台开发人员定义接口协议，模块中能合并的尽量合并。")])]),a._v(" "),s("h3",{attrs:{id:"vue-项目构建中和完成后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-项目构建中和完成后"}},[a._v("#")]),a._v(" vue 项目构建中和完成后")]),a._v(" "),s("ul",[s("li",[a._v("开启 eslint 验证，看到错误和警告信息及时解决；")]),a._v(" "),s("li",[a._v("打开浏览器调试窗口，查看 Network 中从发起网页页面请求 Request 后分析 HTTP 请求后得到的各个请求资源信息（包括状态、资源类型、大小、所用时间等），可以根据这个进行网络性能优化。如查看哪些 http 请求返回资源非常大或耗用时间较长，可针对处理；")]),a._v(" "),s("li",[a._v("打开浏览器调试窗口，在 Timeline 中记录并分析在网站的生命周期内所发生的各类事件，以此可以提高网页的运行时间的性能；")]),a._v(" "),s("li",[a._v("代码编写过程中不断思考是否可优化模块或做共性组件提取；")]),a._v(" "),s("li",[a._v("及时代码审核，提高代码质量")])]),a._v(" "),s("h2",{attrs:{id:"way-优化方法-结合项目举例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#way-优化方法-结合项目举例"}},[a._v("#")]),a._v(" way -- 优化方法（结合项目举例）")]),a._v(" "),s("h3",{attrs:{id:"减少请求数量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#减少请求数量"}},[a._v("#")]),a._v(" 减少请求数量")]),a._v(" "),s("h4",{attrs:{id:"【图片处理】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【图片处理】"}},[a._v("#")]),a._v(" 【图片处理】")]),a._v(" "),s("p",[a._v("1、雪碧图")]),a._v(" "),s("p",[a._v("CSS 雪碧图是把网站上的一些图片整合到一张单独的图片中，可以减少网站的 HTTP 请求数量，但是当整合图片比较大时，一次加载比较慢。")]),a._v(" "),s("p",[a._v("2、Base64")]),a._v(" "),s("p",[a._v("将图片的内容以 Base64 格式内嵌到 HTML 中，可以减少 HTTP 请求数量。但是，由于 Base64 编码用 8 位字符表示信息中的 6 个位，所以编码后大小大约比原始值扩大了 33%")]),a._v(" "),s("p",[a._v("3、使用字体图标来代替图片")]),a._v(" "),s("p",[a._v("多维布控大屏设计是比较个性的，没有现成可用的字体图标，因此左侧图标我们还是采取第 1 种雪碧图的方式来减少 http 的请求数量。一些控件图标使用字体图标代替图片。")]),a._v(" "),s("h4",{attrs:{id:"【地图切片处理】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【地图切片处理】"}},[a._v("#")]),a._v(" 【地图切片处理】")]),a._v(" "),s("p",[a._v("hmap 地图是请求 hvt 图片数据，每个 hvt 图片大小在使用 hmap server 桌面端工具切图时是可配置的，默认值为 256，每增大一倍，请求数量可减少至原来的 1/4。（原理：边长乘 2，面积即原来的 4 倍）")]),a._v(" "),s("p",[a._v("缺点：切片较大时，地图边缘锯齿明显，影响视觉效果。")]),a._v(" "),s("p",[a._v("综合权衡，在切片时我们采取配置切片大小 gridsize 为 512 的方式将地图数据请求减少至默认数量的 1/4。")]),a._v(" "),s("h3",{attrs:{id:"减少重绘回流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#减少重绘回流"}},[a._v("#")]),a._v(" 减少重绘回流")]),a._v(" "),s("h4",{attrs:{id:"【规则动画处理】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【规则动画处理】"}},[a._v("#")]),a._v(" 【规则动画处理】")]),a._v(" "),s("p",[a._v("该应用中规则变化的动画效果能够使用 CSS 实现的效果，尽量使用 CSS 而不使用 JS 实现。如规律的闪烁，规律的变化如下图。")]),a._v(" "),s("p",[a._v("该动画中用 opacity, transform 等不触发重绘和回流的属性来降低重绘和回流频率。 "),s("a",{attrs:{href:"http://10.1.65.34/group1/M00/06/7C/CgFBIl8eeoKAVpZFAABrEKZrOqk754.gif",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"",alt:"img"}}),s("OutboundLink")],1)]),a._v(" "),s("h4",{attrs:{id:"【不规则动画处理】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【不规则动画处理】"}},[a._v("#")]),a._v(" 【不规则动画处理】")]),a._v(" "),s("p",[a._v("大屏头部光效和中间边框光效轨迹有折线，因此需要使用 js 来实现。使用 requestAnimateFrame 让读操作和写操作分离，把所有的写操作放到下一次重新渲染，降低重绘回流的频率，优化渲染。")]),a._v(" "),s("p",[s("strong",[s("code",[a._v("window.requestAnimationFrame()")])]),a._v(" 告诉浏览器——你希望执行一个动画，并且要求浏览器在下次重绘之前调用指定的回调函数更新动画。该方法需要传入一个回调函数作为参数，该回调函数会在浏览器下一次重绘之前执行。")]),a._v(" "),s("h4",{attrs:{id:"【列表滚动】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【列表滚动】"}},[a._v("#")]),a._v(" 【列表滚动】")]),a._v(" "),s("p",[a._v("页面滚动事件（scroll）的监听函数，使用 window.requestAnimationFrame() ，推迟到下一次重新渲染。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("$(window).on('scroll', function() {  \n    window.requestAnimationFrame(scrollHandler);\n})\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h4",{attrs:{id:"【防抖处理】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【防抖处理】"}},[a._v("#")]),a._v(" 【防抖处理】")]),a._v(" "),s("p",[a._v("地图物联资源点位和场所点位资源巨大，因此每次只请求地图可视范围内的点位。当频繁进行缩放拖动会改变可视范围，不断请求数据渲染数据。需要做防抖来限制请求数据方法的频繁触发。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("/** * * @param {执行的函数} func * @param {防抖等待时间} wait */\nfunction debounce(func, wait) {  \n    let timer = null  \n    return () => {    \n        if (timer) {      \n            clearTimeout(timer)      \n            timer = setTimeout(func, wait)\n        } else {\n            timer = setTimeout(func, wait)\n        }\n    }\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br")])]),s("h3",{attrs:{id:"资源加载优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#资源加载优化"}},[a._v("#")]),a._v(" 资源加载优化")]),a._v(" "),s("h4",{attrs:{id:"【懒加载】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【懒加载】"}},[a._v("#")]),a._v(" 【懒加载】")]),a._v(" "),s("p",[a._v("由图一可见预警中心左侧预警列表模块有 200 条预警数据，每条数据都带有图片。但初始化仅展示 7 条数据，未展示的预警信息不去加载，良好的利用服务器资源。")]),a._v(" "),s("h4",{attrs:{id:"【资源加载时机】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【资源加载时机】"}},[a._v("#")]),a._v(" 【资源加载时机】")]),a._v(" "),s("p",[a._v("大屏首页初始化时加载内容较多，其中地图占了一大块面积。因此优先加载地图，等地图渲染结束再加载细节动画，减少等待时间。")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("this.bus.$on('25dmapLoaded', map => {\n   // 优先保证地图的加载 帧动画放后面\n   this.startCanvasAnim()\n})\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h4",{attrs:{id:"【使用缓存】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【使用缓存】"}},[a._v("#")]),a._v(" 【使用缓存】")]),a._v(" "),s("p",[a._v("从预警中心切换到对象布控时，在构建布控任务阶段可随时取消并返回布控中心，此时使用缓存的地图，无需再次重新加载地图。")]),a._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),s("p",[a._v("性能优化不能按照准则照本宣科的做，需要根据实际情况因地制宜、具体分析、综合权衡。本文通过具体的大屏应用项目举例讲述具体优化分析过程，希望能给大家在项目开发、优化带来一些启发。")])])}),[],!1,null,null,null);t.default=r.exports}}]);